{"version":3,"file":"static/js/401.c9a90a43.chunk.js","mappings":"+TAiBaA,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,IAAnC,eAAOK,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAAWC,EAAAA,EAAAA,MAmBXC,EAAQ,WACZV,EAAQ,IACRE,EAAU,IACVE,EAAS,GACV,EAED,OACE,UAAC,KAAD,CAAkBO,SAxBC,SAAAC,GAKnB,GAJAA,EAAMC,kBAIe,IAHAR,EAASS,MAC5B,SAAAC,GAAO,OAAIA,EAAQhB,KAAKiB,gBAAkBjB,EAAKiB,aAAxC,IAIP,OADAN,KACOO,EAAAA,EAAAA,IAAmBlB,GAE5B,IAAMmB,EAAa,CACjBnB,KAAAA,EACAoB,MAAOlB,EACPE,MAAAA,GAEFK,GAASY,EAAAA,EAAAA,IAAcF,IACvBR,GACD,EAQC,WACE,UAAC,KAAD,mBAEE,SAAC,KAAD,CACEW,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,MAAO1B,EACP2B,SAAU,SAAAd,GAAK,OAAIZ,EAAQY,EAAMe,OAAOF,MAAzB,KAEjB,SAAC,KAAD,QAEF,UAAC,KAAD,oBAEE,SAAC,KAAD,CACEJ,KAAK,OACLtB,KAAK,QAELwB,MAAM,0IACNC,UAAQ,EACRC,MAAOtB,EACPuB,SAAU,SAAAd,GAAK,OAAIR,EAASQ,EAAMe,OAAOF,MAA1B,KAEjB,SAAC,KAAD,QAGF,UAAC,KAAD,qBAEE,SAAC,KAAD,CACEJ,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,MAAOxB,EACPyB,SAAU,SAAAd,GAAK,OAAIV,EAAUU,EAAMe,OAAOF,MAA3B,KAEjB,SAAC,KAAD,QAEF,UAAC,KAAD,CAAeJ,KAAK,SAApB,yBAEE,SAACO,EAAA,EAAD,CAAeC,GAAI,CAAEC,WAAY,cAIxC,E,4BC5FYC,EAAmBC,EAAAA,GAAAA,GAAH,iDACV,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGPC,EAAkBJ,EAAAA,GAAAA,GAAH,sJAKP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITE,EAAiBL,EAAAA,GAAAA,IAAH,+LAIL,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,eAAnB,IAGL,SAAAN,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGNK,EAAgBR,EAAAA,GAAAA,EAAH,uNACT,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,YAAYC,MAAxB,IACH,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,CAAtB,IACL,SAAAX,GAAC,OAAIA,EAAEC,MAAMI,OAAOO,YAAnB,IACU,SAAAZ,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,eAAnB,IAGP,SAAAN,GAAC,OAAIA,EAAEC,MAAMY,WAAWC,WAAvB,IAGE,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,QAAQC,YAApB,IAIPC,EAAelB,EAAAA,GAAAA,EAAH,uNACR,SAAAC,GAAC,OAAIA,EAAEC,MAAMO,YAAYC,MAAxB,IACH,SAAAT,GAAC,OAAIA,EAAEC,MAAMS,UAAUC,CAAtB,IACL,SAAAX,GAAC,OAAIA,EAAEC,MAAMI,OAAOO,YAAnB,IACU,SAAAZ,GAAC,OAAIA,EAAEC,MAAMI,OAAOC,eAAnB,IAGP,SAAAN,GAAC,OAAIA,EAAEC,MAAMY,WAAWC,WAAvB,IAGE,SAAAd,GAAC,OAAIA,EAAEC,MAAMc,QAAQC,YAApB,IAIPE,GAAkBnB,EAAAA,EAAAA,IAAOoB,EAAAA,GAAPpB,CAAH,kEACf,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACG,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGLkB,GAAWrB,EAAAA,EAAAA,IAAOsB,EAAAA,EAAPtB,CAAH,0CAIRuB,EAAuBvB,EAAAA,GAAAA,GAAH,oH,uCC7CpBwB,EAAsB,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,gBAAiBC,EAAoB,EAApBA,cAC/ClD,GAAWC,EAAAA,EAAAA,MACjB,OACE,UAAC4B,EAAD,YACE,SAACsB,EAAA,EAAD,CAASpC,MAAM,4BAAf,UACE,SAAC4B,EAAD,CACE9B,KAAK,SACLuC,QAAS,kBAAMpD,GAASqD,EAAAA,EAAAA,IAAcJ,GAA7B,EAFX,UAIgC,IAA7BA,EAAgBK,UACf,SAACT,EAAD,KAEA,SAACU,EAAA,EAAD,SAIN,SAACvB,EAAD,UAAgBiB,EAAgB1D,QAChC,SAACmD,EAAD,UAAeO,EAAgBtD,SAC/B,SAACqC,EAAD,UAAgBiB,EAAgBtC,SAChC,SAACwC,EAAA,EAAD,CAASpC,MAAM,0BAAf,UACE,SAAC4B,EAAD,CACE9B,KAAK,SACLuC,QAAS,kBAAMpD,GAASwD,EAAAA,EAAAA,IAAcP,EAAgBQ,KAA7C,EAFX,UAIE,SAACC,EAAA,EAAD,SAIJ,SAACP,EAAA,EAAD,CAASpC,MAAM,0BAAf,UACE,SAAC4B,EAAD,CACE9B,KAAK,SACLuC,QAAS,kBAAMF,EAAcD,EAAgBQ,IAApC,EAFX,UAIE,SAACE,EAAA,EAAD,UAKT,E,oBCvCYC,EAAoB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,eAAgBC,EAAmB,EAAnBA,aAClD,GAAwBxE,EAAAA,EAAAA,UAASuE,EAAetE,MAAhD,eAAOA,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAASuE,EAAelD,OAApD,eAAOlB,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAASuE,EAAelE,OAAlD,eAAOA,EAAP,KAAcC,EAAd,KAEMI,GAAWC,EAAAA,EAAAA,MAaXC,EAAQ,WACZV,EAAQ,IACRE,EAAU,IACVE,EAAS,GACV,EAED,OACE,UAAC,KAAD,CAAkBO,SAlBC,SAAAC,GACnBA,EAAMC,iBACN,IAAMK,EAAa,CACjBqD,GAAIF,EAAeJ,IACnBlE,KAAAA,EACAoB,MAAOlB,EACPE,MAAAA,GAEFK,GAASgE,EAAAA,EAAAA,IAActD,IACvBR,GACD,EAQC,WACE,UAAC,KAAD,CAAkB+D,MAAO,CAAEC,MAAO,SAAlC,kBAEE,SAAC,KAAD,CACEd,QAAS,SAAAhD,GAAK,OAAIZ,EAAQ,GAAZ,EACdqB,KAAK,OACLtB,KAAK,OACLuB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,MAAO1B,EACP2B,SAAU,SAAAd,GAAK,OAAIZ,EAAQY,EAAMe,OAAOF,MAAzB,KAEjB,SAAC,KAAD,QAEF,UAAC,KAAD,CAAkBgD,MAAO,CAAEC,MAAO,SAAlC,mBAEE,SAAC,KAAD,CACEd,QAAS,SAAAhD,GAAK,OAAIR,EAAS,GAAb,EACdiB,KAAK,OACLtB,KAAK,QAELwB,MAAM,0IACNC,UAAQ,EACRC,MAAOtB,EACPuB,SAAU,SAAAd,GAAK,OAAIR,EAASQ,EAAMe,OAAOF,MAA1B,KAEjB,SAAC,KAAD,QAGF,UAAC,KAAD,CAAkBgD,MAAO,CAAEC,MAAO,SAAlC,oBAEE,SAAC,KAAD,CACEd,QAAS,SAAAhD,GAAK,OAAIV,EAAU,GAAd,EACdmB,KAAK,MACLtB,KAAK,SACLuB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,MAAOxB,EACPyB,SAAU,SAAAd,GAAK,OAAIV,EAAUU,EAAMe,OAAOF,MAA3B,KAEjB,SAAC,KAAD,QAEF,UAAC,KAAD,CAAeJ,KAAK,SAASuC,QAASU,EAAtC,4BAEE,SAAC1C,EAAA,EAAD,CAAeC,GAAI,CAAEC,WAAY,aAEnC,UAAC,KAAD,CACET,KAAK,SACLuC,QAASU,EACTG,MAAO,CAAEE,UAAW,QAHtB,kCAME,SAACC,EAAA,EAAD,CAAY/C,GAAI,CAAEC,WAAY,cAIrC,ECvFY+C,EAAc,WACzB,OAA0B/E,EAAAA,EAAAA,WAAS,GAAnC,eAAOgF,EAAP,KAAcC,EAAd,KACA,GAA4CjF,EAAAA,EAAAA,UAAS,CAAC,GAAtD,eAAOuE,EAAP,KAAuBW,EAAvB,KACMxE,GAAWC,EAAAA,EAAAA,MACTwE,GAAe3E,EAAAA,EAAAA,IAAY4E,EAAAA,IAA3BD,WACFE,GAAmB7E,EAAAA,EAAAA,IAAY8E,EAAAA,KAErCC,EAAAA,EAAAA,YAAU,YACW,IAAfJ,GACFzE,GAAS8E,EAAAA,EAAAA,MAEZ,GAAE,CAACL,EAAYzE,IAEhB,IAAM+E,EAAc,SAAAhB,GAClB,IAAMxD,EAAUoE,EAAiBK,QAC/B,SAAA/B,GAAe,OAAIA,EAAgBQ,MAAQM,CAA5B,IAEjBQ,GAAS,GACTC,EAAkBjE,EAAQ,GAC3B,EAEK0E,EAAa,WACjBV,GAAS,EACV,EAED,OACE,iCACE,SAAChD,EAAD,UACGoD,EAAiBO,KAAI,SAAAjC,GACpB,OACE,SAACrB,EAAD,WACE,SAACoB,EAAD,CACEC,gBAAiBA,EACjBC,cAAe6B,KAHG9B,EAAgBQ,IAOzC,OAEH,SAAC0B,EAAA,EAAD,CAAOC,SAAUd,EAAOR,aAAcmB,EAAtC,UACa,IAAVX,IACC,iCACE,SAACvB,EAAD,2CAGA,eAAGkB,MAAO,CAAEoB,aAAc,QAA1B,uEAC6D,QAE7D,SAACzB,EAAD,CACEE,aAAcmB,EACdpB,eAAgBA,WAO7B,E,UCpEYyB,GAAc9D,EAAAA,EAAAA,IAAO+D,EAAAA,GAAP/D,CAAH,4IAMb,SAAAC,GAAC,OAAIA,EAAEC,MAAMI,OAAO0D,YAAnB,IAGCC,GAAcjE,EAAAA,EAAAA,IAAOkE,EAAAA,GAAPlE,CAAH,sFCNXmE,EAAS,WACpB,IAAMX,GAASlF,EAAAA,EAAAA,IAAY8F,EAAAA,IACrB5F,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,UAACqF,EAAD,oCAEE,SAACG,EAAD,CACE5E,KAAK,OACLtB,KAAK,SACLwB,MAAM,yCACNC,UAAQ,EACRC,MAAO+D,EACP9D,SAAU,SAAAd,GAAK,OAAIJ,GAAS6F,EAAAA,EAAAA,GAAUzF,EAAMe,OAAOF,OAApC,KAEjB,SAAC,KAAD,QAIP,E,UCZY6E,EAAW,WACtB,IAAMC,GAAUjG,EAAAA,EAAAA,IAAYkG,EAAAA,IACtBnG,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAE7B,OACE,UAAC,KAAD,YACE,UAACkG,EAAA,EAAD,CAAKC,GAAG,UAAUC,GAAI,EAAtB,WACE,SAAC,KAAD,yBACA,SAAC9G,EAAD,QAEF,UAAC4G,EAAA,EAAD,CAAKC,GAAG,UAAUC,GAAI,EAAtB,WACE,SAAC,KAAD,2BACa,IAAZJ,IAAoB,SAACK,EAAA,EAAD,KACrB,SAAC/B,EAAD,KACA,SAACsB,EAAD,IACqB,IAApB9F,EAASwG,SACR,SAAC,KAAD,8GAQT,C","sources":["components/ContactForm/ContactForm.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactListItem.js","components/ChangeContactModal/ChangeContactForm.js","components/ContactList/ContactList.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selector';\nimport { addNewContact } from 'redux/operations/contactsOperations';\nimport {\n  ClassicFormStyle,\n  ClassicLabelForm,\n  ClassicInputForm,\n  ClassicButton,\n} from 'components/GlobalStyles';\nimport { toastWarnDuplicate } from 'components/services/toasts';\nimport {\n  PersonIconStyle,\n  LocalPhoneIconStyle,\n} from 'components/icons/icons.styled';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [email, setEmail] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    const checkContact = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (checkContact === true) {\n      reset();\n      return toastWarnDuplicate(name);\n    }\n    const newContact = {\n      name,\n      phone: number,\n      email,\n    };\n    dispatch(addNewContact(newContact));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n    setEmail('');\n  };\n\n  return (\n    <ClassicFormStyle onSubmit={onSubmitForm}>\n      <ClassicLabelForm>\n        Name\n        <ClassicInputForm\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n        <PersonIconStyle />\n      </ClassicLabelForm>\n      <ClassicLabelForm>\n        Email\n        <ClassicInputForm\n          type=\"text\"\n          name=\"email\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Email may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n        <PersonIconStyle />\n      </ClassicLabelForm>\n\n      <ClassicLabelForm>\n        Number\n        <ClassicInputForm\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={event => setNumber(event.target.value)}\n        />\n        <LocalPhoneIconStyle />\n      </ClassicLabelForm>\n      <ClassicButton type=\"submit\">\n        Add contact\n        <AddIcCallIcon sx={{ marginLeft: '5px' }} />\n      </ClassicButton>\n    </ClassicFormStyle>\n  );\n};\n","import styled from 'styled-components';\nimport { ClassicButton } from 'components/GlobalStyles';\nimport StarIcon from '@mui/icons-material/Star';\n\nexport const ContactListStyle = styled.ul`\n  margin-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport const ContactListItem = styled.li`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const ContactWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${p => p.theme.colors.almostDarkGreen};\n  width: 600px;\n  border-radius: 4px;\n  padding-left: ${p => p.theme.space[4]}px;\n`;\n\nexport const ContactNumber = styled.p`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.clearlyWhite};\n  background-color: ${p => p.theme.colors.almostDarkGreen};\n  width: 130px;\n  cursor: pointer;\n  transition: ${p => p.theme.transition.cubicBezier};\n  &:hover,\n  &:focus {\n    text-shadow: ${p => p.theme.shadows.shadowSecond};\n  }\n`;\n\nexport const ContactEmail = styled.p`\n  font-weight: ${p => p.theme.fontWeights.medium};\n  font-size: ${p => p.theme.fontSizes.m};\n  color: ${p => p.theme.colors.clearlyWhite};\n  background-color: ${p => p.theme.colors.almostDarkGreen};\n  cursor: pointer;\n  width: 250px;\n  transition: ${p => p.theme.transition.cubicBezier};\n  &:hover,\n  &:focus {\n    text-shadow: ${p => p.theme.shadows.shadowSecond};\n  }\n`;\n\nexport const ButtonForDelete = styled(ClassicButton)`\n  padding: ${p => p.theme.space[2]}px;\n  margin-left: ${p => p.theme.space[3]}px;\n`;\n\nexport const Favorite = styled(StarIcon)`\n  color: orange;\n`;\n\nexport const ContactChangeContact = styled.h2`\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n  margin-bottom: 15px;\n`;\n","// import PropTypes from 'prop-types';\nimport {\n  ContactWrapper,\n  ContactNumber,\n  ContactEmail,\n  ButtonForDelete,\n  Favorite,\n} from 'components/ContactList/ContactList.styled';\nimport { useDispatch } from 'react-redux';\nimport { Tooltip } from '@mui/material';\nimport {\n  deleteContact,\n  addToFavorite,\n} from 'redux/operations/contactsOperations';\n\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport StarOutlineIcon from '@mui/icons-material/StarOutline';\nimport CreateIcon from '@mui/icons-material/Create';\n\nexport const ContactItemEntrails = ({ filteredContact, activateModal }) => {\n  const dispatch = useDispatch();\n  return (\n    <ContactWrapper>\n      <Tooltip title=\"Press for add to favorite\">\n        <ButtonForDelete\n          type=\"button\"\n          onClick={() => dispatch(addToFavorite(filteredContact))}\n        >\n          {filteredContact.favorite === true ? (\n            <Favorite />\n          ) : (\n            <StarOutlineIcon />\n          )}\n        </ButtonForDelete>\n      </Tooltip>\n      <ContactNumber>{filteredContact.name}</ContactNumber>\n      <ContactEmail>{filteredContact.email}</ContactEmail>\n      <ContactNumber>{filteredContact.phone}</ContactNumber>\n      <Tooltip title=\"Press to delete contact\">\n        <ButtonForDelete\n          type=\"button\"\n          onClick={() => dispatch(deleteContact(filteredContact._id))}\n        >\n          <DeleteIcon />\n        </ButtonForDelete>\n      </Tooltip>\n\n      <Tooltip title=\"Press to change contact\">\n        <ButtonForDelete\n          type=\"button\"\n          onClick={() => activateModal(filteredContact._id)}\n        >\n          <CreateIcon />\n        </ButtonForDelete>\n      </Tooltip>\n    </ContactWrapper>\n  );\n};\n\n// ContactItemEntrails.propTypes = {\n//   // id: PropTypes.string.isRequired,\n//   name: PropTypes.string.isRequired,\n//   number: PropTypes.string.isRequired,\n// };\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { changeContact } from 'redux/operations/contactsOperations';\n\nimport {\n  ClassicFormStyle,\n  ClassicLabelForm,\n  ClassicInputForm,\n  ClassicButton,\n} from 'components/GlobalStyles';\n\nimport {\n  PersonIconStyle,\n  LocalPhoneIconStyle,\n} from 'components/icons/icons.styled';\nimport AddIcCallIcon from '@mui/icons-material/AddIcCall';\nimport CancelIcon from '@mui/icons-material/Cancel';\n\nexport const ChangeContactForm = ({ changedContact, isCloseModal }) => {\n  const [name, setName] = useState(changedContact.name);\n  const [number, setNumber] = useState(changedContact.phone);\n  const [email, setEmail] = useState(changedContact.email);\n\n  const dispatch = useDispatch();\n\n  const onSubmitForm = event => {\n    event.preventDefault();\n    const newContact = {\n      id: changedContact._id,\n      name,\n      phone: number,\n      email,\n    };\n    dispatch(changeContact(newContact));\n    reset();\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n    setEmail('');\n  };\n\n  return (\n    <ClassicFormStyle onSubmit={onSubmitForm}>\n      <ClassicLabelForm style={{ color: 'black' }}>\n        Name\n        <ClassicInputForm\n          onClick={event => setName('')}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={event => setName(event.target.value)}\n        />\n        <PersonIconStyle />\n      </ClassicLabelForm>\n      <ClassicLabelForm style={{ color: 'black' }}>\n        Email\n        <ClassicInputForm\n          onClick={event => setEmail('')}\n          type=\"text\"\n          name=\"email\"\n          // pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Email may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={email}\n          onChange={event => setEmail(event.target.value)}\n        />\n        <PersonIconStyle />\n      </ClassicLabelForm>\n\n      <ClassicLabelForm style={{ color: 'black' }}>\n        Number\n        <ClassicInputForm\n          onClick={event => setNumber('')}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={event => setNumber(event.target.value)}\n        />\n        <LocalPhoneIconStyle />\n      </ClassicLabelForm>\n      <ClassicButton type=\"submit\" onClick={isCloseModal}>\n        Change contact\n        <AddIcCallIcon sx={{ marginLeft: '5px' }} />\n      </ClassicButton>\n      <ClassicButton\n        type=\"button\"\n        onClick={isCloseModal}\n        style={{ marginTop: '10px' }}\n      >\n        Exit without changes\n        <CancelIcon sx={{ marginLeft: '5px' }} />\n      </ClassicButton>\n    </ClassicFormStyle>\n  );\n};\n","import { ContactItemEntrails } from 'components/ContactList/ContactListItem';\nimport { Modal } from 'components/Modal/Modal';\nimport { ChangeContactForm } from 'components/ChangeContactModal/ChangeContactForm';\n\nimport {\n  ContactListStyle,\n  ContactListItem,\n  ContactChangeContact,\n} from 'components/ContactList/ContactList.styled';\nimport { selectFilteredContacts, selectAuth } from 'redux/selector';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/operations/contactsOperations';\nimport { useEffect, useState } from 'react';\n\nexport const ContactList = () => {\n  const [modal, setModal] = useState(false);\n  const [changedContact, setChangedContact] = useState({});\n  const dispatch = useDispatch();\n  const { isLoggedIn } = useSelector(selectAuth);\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  useEffect(() => {\n    if (isLoggedIn === true) {\n      dispatch(fetchContacts());\n    }\n  }, [isLoggedIn, dispatch]);\n\n  const activeModal = id => {\n    const contact = filteredContacts.filter(\n      filteredContact => filteredContact._id === id\n    );\n    setModal(true);\n    setChangedContact(contact[0]);\n  };\n\n  const closeModal = () => {\n    setModal(false);\n  };\n\n  return (\n    <>\n      <ContactListStyle>\n        {filteredContacts.map(filteredContact => {\n          return (\n            <ContactListItem key={filteredContact._id}>\n              <ContactItemEntrails\n                filteredContact={filteredContact}\n                activateModal={activeModal}\n              />\n            </ContactListItem>\n          );\n        })}\n      </ContactListStyle>\n      <Modal isOpened={modal} isCloseModal={closeModal}>\n        {modal === true && (\n          <>\n            <ContactChangeContact>\n              Do you want change contact?\n            </ContactChangeContact>\n            <p style={{ marginBottom: '15px' }}>\n              You can change any field by clicking on the selected field{' '}\n            </p>\n            <ChangeContactForm\n              isCloseModal={closeModal}\n              changedContact={changedContact}\n            />\n          </>\n        )}\n      </Modal>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { ClassicLabelForm, ClassicInputForm } from 'components/GlobalStyles';\n\nexport const LabelFilter = styled(ClassicLabelForm)`\n  position: relative;\n  display: block;\n  width: 240px;\n  margin: 0 auto;\n  text-align: center;\n  color: ${p => p.theme.colors.reallyBisque};\n`;\n\nexport const InputFilter = styled(ClassicInputForm)`\n  width: 200px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/selector';\nimport { setFilter } from 'redux/slices/contactsSlice';\nimport { LabelFilter, InputFilter } from 'components/Filter/Filter.styled';\nimport { SearchIconStyle } from 'components/icons/icons.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <LabelFilter>\n        Find contacts by name\n        <InputFilter\n          type=\"text\"\n          name=\"filter\"\n          title=\"The ability to filter the contact book\"\n          required\n          value={filter}\n          onChange={event => dispatch(setFilter(event.target.value))}\n        />\n        <SearchIconStyle />\n      </LabelFilter>\n    </>\n  );\n};\n","import { Box } from 'components/Box';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loading } from 'components/Loading';\nimport {\n  MainTitle,\n  SecondTitle,\n  WarningMessage,\n  ContactsWrapper,\n} from 'components/GlobalStyles';\nimport { useSelector } from 'react-redux';\nimport { selectContacts, selectIsLoading } from 'redux/selector';\n\nexport const Contacts = () => {\n  const loading = useSelector(selectIsLoading);\n  const contacts = useSelector(selectContacts);\n\n  return (\n    <ContactsWrapper>\n      <Box as=\"section\" mb={5}>\n        <MainTitle>Phonebook</MainTitle>\n        <ContactForm />\n      </Box>\n      <Box as=\"section\" mb={5}>\n        <SecondTitle>My Contacts</SecondTitle>\n        {loading === true && <Loading />}\n        <ContactList />\n        <Filter />\n        {contacts.length === 0 && (\n          <WarningMessage>\n            Looks like you don`t have any contacts yet or just clear them all.\n            Please add new contact!\n          </WarningMessage>\n        )}\n      </Box>\n    </ContactsWrapper>\n  );\n};\n"],"names":["ContactForm","useState","name","setName","number","setNumber","email","setEmail","contacts","useSelector","selectContacts","dispatch","useDispatch","reset","onSubmit","event","preventDefault","some","contact","toLowerCase","toastWarnDuplicate","newContact","phone","addNewContact","type","pattern","title","required","value","onChange","target","AddIcCall","sx","marginLeft","ContactListStyle","styled","p","theme","space","ContactListItem","ContactWrapper","colors","almostDarkGreen","ContactNumber","fontWeights","medium","fontSizes","m","clearlyWhite","transition","cubicBezier","shadows","shadowSecond","ContactEmail","ButtonForDelete","ClassicButton","Favorite","StarIcon","ContactChangeContact","ContactItemEntrails","filteredContact","activateModal","Tooltip","onClick","addToFavorite","favorite","StarOutline","deleteContact","_id","Delete","Create","ChangeContactForm","changedContact","isCloseModal","id","changeContact","style","color","marginTop","Cancel","ContactList","modal","setModal","setChangedContact","isLoggedIn","selectAuth","filteredContacts","selectFilteredContacts","useEffect","fetchContacts","activeModal","filter","closeModal","map","Modal","isOpened","marginBottom","LabelFilter","ClassicLabelForm","reallyBisque","InputFilter","ClassicInputForm","Filter","selectFilter","setFilter","Contacts","loading","selectIsLoading","Box","as","mb","Loading","length"],"sourceRoot":""}